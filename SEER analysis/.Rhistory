w<-survfit(OSch3)
library(survival)
rm(list=ls()); #clear variables
load("Rectum.RData");
#rewriting variables values
#For interval censored data, the status indicator is 0=right censored, 1=event at time, 2=left censored, 3=interval censored
attach(data)
data$Vital_Status[Vital_Status == 1] <- 0; #alive (censored)
data$Vital_Status[Vital_Status == 4] <- 1; #dead
data$Cancer_free_survival_flag = 1-data$Cancer_free_survival_flag; #recoding cancer_survival flag
#limiting to 240 months
indx = data$Cancer_free_survival_Months > 240;
data$Cancer_free_survival_Months[indx] = 240;
data$Cancer_free_survival_flag[indx] = 0;
indx = data$Survival_Months > 240;
data$Survival_Months[indx] = 240;
data$Vital_Status[indx] = 0;
detach(data)
#removing other/unknwon values
data = data[data$Surgery!="5 - Unknown",]
data = data[data$RadiationType!="3 - Uknown",]
data = data[data$Histology!="4 - NOS",]
CFch = coxph(formula = Surv(Cancer_free_survival_Months, Cancer_free_survival_flag) ~ factor(RadSurgSeq) +factor(Race)+factor(Sex)+Age+Year_Diagnosis+factor(Surgery)+factor(RadiationType)+TumorSize+factor(Histology), data = data);
setwd("~/GitHub/NeoadjuvantRTpaper/SEER analysis/New data Aug 2018")
library(survival)
rm(list=ls()); #clear variables
load("Lung.RData");
#rewriting variables values
#For interval censored data, the status indicator is 0=right censored, 1=event at time, 2=left censored, 3=interval censored
attach(data)
data$Vital_Status[Vital_Status == 1] <- 0; #alive (censored)
data$Vital_Status[Vital_Status == 4] <- 1; #dead
data$Cancer_free_survival_flag = 1-data$Cancer_free_survival_flag; #recoding cancer_survival flag
#limiting to 240 months
indx = data$Cancer_free_survival_Months > 240;
data$Cancer_free_survival_Months[indx] = 240;
data$Cancer_free_survival_flag[indx] = 0;
indx = data$Survival_Months > 240;
data$Survival_Months[indx] = 240;
data$Vital_Status[indx] = 0;
detach(data)
#removing other/unknwon values
data = data[data$Surgery!="4 - Unknown",]
data = data[data$RadiationType!="3 - Uknown",]
data = data[data$Histology!="3 - Unknown",]
CFch = coxph(formula = Surv(Cancer_free_survival_Months, Cancer_free_survival_flag) ~ factor(RadSurgSeq) +factor(Race)+factor(Sex)+Age+Year_Diagnosis+factor(Surgery)+factor(RadiationType)+TumorSize+factor(Histology), data = data);
#outputting summary of the regression
summary(CFch)
#checking if assumptions for Cox regression hold
cox.zph(CFch)
CFch = coxph(formula = Surv(Cancer_free_survival_Months, Cancer_free_survival_flag) ~ factor(RadSurgSeq) +factor(Race)+factor(Sex)+Age+Year_Diagnosis+factor(Surgery)+factor(RadiationType)+TumorSize+factor(Histology), data = data);
#outputting summary of the regression
summary(CFch)
#checking if assumptions for Cox regression hold
cox.zph(CFch)
#plotting hazard ratio coefficient curves to see if lines are "flat enough"
plot(cox.zph(CFch),resid=FALSE,cex = 0.01, pch = 19, lty = 3, col =c(1,2,3),ylim=c(-2,2))
# Prepare the columns
beta <- coef(CFch)
w<-summary(CFch)
se   <- sqrt(diag(CFch$var))
p    <- 1 - pchisq((beta/se)^2, 1)
CI   <- round(confint(CFch), 3)
# Bind columns together, and select desired rows
res <- cbind(round(exp(beta),3),round(as.vector(w$conf.int[,3]),3),round(as.vector(w$conf.int[,4]),3), round(p,3))
#plot survival curves
CFch2 = coxph(formula = Surv(Cancer_free_survival_Months, Cancer_free_survival_flag) ~ strata(RadSurgSeq) +factor(Race)+factor(Sex)+Age+Year_Diagnosis+factor(Surgery)+factor(RadiationType)+TumorSize+factor(Histology), data = data);
p<-plot(survfit(CFch2), ylim=c(0,1),mark.time = F, ylab="Disease-free survival",xlab="Months", col = c('red','black'), main="Cox proportional hazard model by radiation and surgery sequencing")
legend('topright', c("Neoadjuvant RT","Adjuvant RT"), lty=1, col=c('black', 'red'), bty='n', cex=.75)
OSch = coxph(formula = Surv(Survival_Months, Vital_Status) ~ factor(RadSurgSeq) +factor(Race)+factor(Sex)+Age+Year_Diagnosis+factor(Surgery)+factor(RadiationType)+TumorSize+factor(Histology), data = data);
#outputting summary of the regression
summary(OSch)
#checking if assumptions for Cox regression holdlibrary(forestplot)
cox.zph(OSch)
plot(cox.zph(OSch),resid=FALSE,cex = 0.01, pch = 19, lty = 3, col =c(1,2,3),ylim=c(-2,2))
View(data)
unique(data$Histology)
library(survival)
rm(list=ls()); #clear variables
load("Lung.RData");
#rewriting variables values
#For interval censored data, the status indicator is 0=right censored, 1=event at time, 2=left censored, 3=interval censored
attach(data)
data$Vital_Status[Vital_Status == 1] <- 0; #alive (censored)
data$Vital_Status[Vital_Status == 4] <- 1; #dead
data$Cancer_free_survival_flag = 1-data$Cancer_free_survival_flag; #recoding cancer_survival flag
#limiting to 240 months
indx = data$Cancer_free_survival_Months > 240;
data$Cancer_free_survival_Months[indx] = 240;
data$Cancer_free_survival_flag[indx] = 0;
indx = data$Survival_Months > 240;
data$Survival_Months[indx] = 240;
data$Vital_Status[indx] = 0;
detach(data)
#removing other/unknwon values
data = data[data$Surgery!="4 - Unknown",]
data = data[data$RadiationType!="3 - Uknown",]
data = data[data$Histology!="3 - Unknown",]
data = data[data$Histology!="95403",]
data = data[data$Histology!="90403",]
data = data[data$Histology!="81233",]
unique(RadSurgSeq)
unique(data$RadSurgSeq)
unique(data$Race)
unique(data$Sex)
unique(data$Age)
unique(data$Year_Diagnosis)
unique(data$Surgery)
unique(data$RadiationType)
unique(data$Histology)
unique(data$TumorSize)
library(survival)
rm(list=ls()); #clear variables
load("Lung.RData");
#rewriting variables values
#For interval censored data, the status indicator is 0=right censored, 1=event at time, 2=left censored, 3=interval censored
attach(data)
data$Vital_Status[Vital_Status == 1] <- 0; #alive (censored)
data$Vital_Status[Vital_Status == 4] <- 1; #dead
data$Cancer_free_survival_flag = 1-data$Cancer_free_survival_flag; #recoding cancer_survival flag
#limiting to 240 months
indx = data$Cancer_free_survival_Months > 240;
data$Cancer_free_survival_Months[indx] = 240;
data$Cancer_free_survival_flag[indx] = 0;
indx = data$Survival_Months > 240;
data$Survival_Months[indx] = 240;
data$Vital_Status[indx] = 0;
detach(data)
#removing other/unknwon values
data = data[data$Surgery!="4 - Unknown",]
data = data[data$RadiationType!="3 - Uknown",]
data = data[data$Histology!="3 - Unknown",]
data = data[data$Histology!="95403",]
data = data[data$Histology!="90403",]
data = data[data$Histology!="81233",]
CFch = coxph(formula = Surv(Cancer_free_survival_Months, Cancer_free_survival_flag) ~ factor(RadSurgSeq) +factor(Race)+factor(Sex)+Age+Year_Diagnosis+factor(Surgery)+factor(RadiationType)+TumorSize+factor(Histology), data = data);
#outputting summary of the regression
summary(CFch)
#checking if assumptions for Cox regression hold
cox.zph(CFch)
#plotting hazard ratio coefficient curves to see if lines are "flat enough"
plot(cox.zph(CFch),resid=FALSE,cex = 0.01, pch = 19, lty = 3, col =c(1,2,3),ylim=c(-2,2))
# Prepare the columns
beta <- coef(CFch)
w<-summary(CFch)
se   <- sqrt(diag(CFch$var))
p    <- 1 - pchisq((beta/se)^2, 1)
CI   <- round(confint(CFch), 3)
# Bind columns together, and select desired rows
res <- cbind(round(exp(beta),3),round(as.vector(w$conf.int[,3]),3),round(as.vector(w$conf.int[,4]),3), round(p,3))
#plot survival curves
CFch2 = coxph(formula = Surv(Cancer_free_survival_Months, Cancer_free_survival_flag) ~ strata(RadSurgSeq) +factor(Race)+factor(Sex)+Age+Year_Diagnosis+factor(Surgery)+factor(RadiationType)+TumorSize+factor(Histology), data = data);
p<-plot(survfit(CFch2), ylim=c(0,1),mark.time = F, ylab="Disease-free survival",xlab="Months", col = c('red','black'), main="Cox proportional hazard model by radiation and surgery sequencing")
legend('topright', c("Neoadjuvant RT","Adjuvant RT"), lty=1, col=c('black', 'red'), bty='n', cex=.75)
OSch = coxph(formula = Surv(Survival_Months, Vital_Status) ~ factor(RadSurgSeq) +factor(Race)+factor(Sex)+Age+Year_Diagnosis+factor(Surgery)+factor(RadiationType)+TumorSize+factor(Histology), data = data);
#outputting summary of the regression
summary(OSch)
#checking if assumptions for Cox regression holdlibrary(forestplot)
cox.zph(OSch)
#plotting hazard ratio coefficient curves to see if lines are "flat enough"
plot(cox.zph(OSch),resid=FALSE,cex = 0.01, pch = 19, lty = 3, col =c(1,2,3),ylim=c(-2,2))
# Prepare the columns
beta <- coef(OSch)
w<-summary(OSch)
se   <- sqrt(diag(OSch$var))
p    <- 1 - pchisq((beta/se)^2, 1)
CI   <- round(confint(OSch), 3)
# Bind columns together, and select desired rows
res <- cbind(res, round(exp(beta),3),round(as.vector(w$conf.int[,3]),3),round(as.vector(w$conf.int[,4]),3), round(p,3))
#plot survival curves
OSch2 = coxph(formula = Surv(Survival_Months, Vital_Status) ~ strata(RadSurgSeq) +factor(Race)+factor(Sex)+Age+Year_Diagnosis+factor(Surgery)+factor(RadiationType)+TumorSize+factor(Histology), data = data);
p<-plot(survfit(OSch2), ylim=c(0,1),mark.time = F, ylab="Overall survival",xlab="Months", col = c('red','black'), main="Cox proportional hazard model by radiation and surgery sequencing")
legend('topright', c("Neoadjuvant RT","Adjuvant RT"), lty=1, col=c('black', 'red'), bty='n', cex=.75)
OSch3 = coxph(formula = Surv(Survival_Months, Vital_Status) ~ factor(RadSurgSeq) +factor(Race)+factor(Sex)+Age+Year_Diagnosis+factor(Surgery)+factor(RadiationType)+TumorSize+factor(Histology), data = data);
w<-survfit(OSch3)
d <- as.data.frame(res);
d["names"] <- rownames(res);
library(xlsx)
write.xlsx(d, "LungResults.xlsx");
getwd()
help(plot)
doc cox.zph
? cox.zph
install.packages("rms")
summary(CFch2)
plot(summary(CFch2))
library(rms)
plot(summary(CFch2))
plot.summary.rms(summary(CFch2))
ggforest(CFch2, data = data)
library(ggplot2)
ggforest(CFch2, data = data)
require("survival")
ggforest(CFch2, data = data)
library("survminer")
ggforest(CFch2, data = data)
data2 <- data2
data2 <- data
ggforest(CFch2, data = data2)
View(data2)
ggforest(OSch2, data = data2)
library(survival)
library(knitr)
rm(list=ls()); #clear variables
load("Lung.RData");
#rewriting variables values
#For interval censored data, the status indicator is 0=right censored, 1=event at time, 2=left censored, 3=interval censored
attach(data)
data$Vital_Status[Vital_Status == 1] <- 0; #alive (censored)
data$Vital_Status[Vital_Status == 4] <- 1; #dead
data$Cancer_free_survival_flag = 1-data$Cancer_free_survival_flag; #recoding cancer_survival flag
#limiting to 240 months
indx = data$Cancer_free_survival_Months > 240;
data$Cancer_free_survival_Months[indx] = 240;
data$Cancer_free_survival_flag[indx] = 0;
indx = data$Survival_Months > 240;
data$Survival_Months[indx] = 240;
data$Vital_Status[indx] = 0;
detach(data)
#removing other/unknwon values
data = data[data$Surgery!="4 - Unknown",]
data = data[data$RadiationType!="3 - Uknown",]
data = data[data$Histology!="3 - Unknown",]
data = data[data$Histology!="95403",]
data = data[data$Histology!="90403",]
data = data[data$Histology!="81233",]
CFch = coxph(formula = Surv(Cancer_free_survival_Months, Cancer_free_survival_flag) ~ factor(RadSurgSeq) +factor(Race)+factor(Sex)+Age+Year_Diagnosis+factor(Surgery)+factor(RadiationType)+TumorSize+factor(Histology), data = data);
ggforest(CFch, data = data)
?ggforest
ggforest(CFch)
ggforest(CFch, data = data)
require("survminer")
require("survival")
CFch <- coxph(formula = Surv(Cancer_free_survival_Months, Cancer_free_survival_flag) ~ factor(RadSurgSeq) +factor(Race)+factor(Sex)+Age+Year_Diagnosis+factor(Surgery)+factor(RadiationType)+TumorSize+factor(Histology), data = data)
ggforest(CFch)
install.packages("survminer")
library(survival)
library(knitr)
rm(list=ls()); #clear variables
load("Lung.RData");
#rewriting variables values
#For interval censored data, the status indicator is 0=right censored, 1=event at time, 2=left censored, 3=interval censored
attach(data)
data$Vital_Status[Vital_Status == 1] <- 0; #alive (censored)
data$Vital_Status[Vital_Status == 4] <- 1; #dead
data$Cancer_free_survival_flag = 1-data$Cancer_free_survival_flag; #recoding cancer_survival flag
#limiting to 240 months
indx = data$Cancer_free_survival_Months > 240;
data$Cancer_free_survival_Months[indx] = 240;
data$Cancer_free_survival_flag[indx] = 0;
indx = data$Survival_Months > 240;
data$Survival_Months[indx] = 240;
data$Vital_Status[indx] = 0;
detach(data)
#removing other/unknwon values
data = data[data$Surgery!="4 - Unknown",]
data = data[data$RadiationType!="3 - Uknown",]
data = data[data$Histology!="3 - Unknown",]
data = data[data$Histology!="95403",]
data = data[data$Histology!="90403",]
data = data[data$Histology!="81233",]
CFch <- coxph(formula = Surv(Cancer_free_survival_Months, Cancer_free_survival_flag) ~ factor(RadSurgSeq) +factor(Race)+factor(Sex)+Age+Year_Diagnosis+factor(Surgery)+factor(RadiationType)+TumorSize+factor(Histology), data = data)
require("survminer")
ggforest(CFch)
ggforest(CFch, data = data)
View(data)
library(survival)
library(knitr)
rm(list=ls()); #clear variables
load("Lung.RData");
drops <- c('SexN')
#dropping SexN variable
data <- data[ , !(names(data) %in% drops)]
#rewriting variables values
#For interval censored data, the status indicator is 0=right censored, 1=event at time, 2=left censored, 3=interval censored
attach(data)
data$Vital_Status[Vital_Status == 1] <- 0; #alive (censored)
data$Vital_Status[Vital_Status == 4] <- 1; #dead
data$Cancer_free_survival_flag = 1-data$Cancer_free_survival_flag; #recoding cancer_survival flag
#limiting to 240 months
indx = data$Cancer_free_survival_Months > 240;
data$Cancer_free_survival_Months[indx] = 240;
data$Cancer_free_survival_flag[indx] = 0;
indx = data$Survival_Months > 240;
data$Survival_Months[indx] = 240;
data$Vital_Status[indx] = 0;
detach(data)
#removing other/unknwon values
data = data[data$Surgery!="4 - Unknown",]
data = data[data$RadiationType!="3 - Uknown",]
data = data[data$Histology!="3 - Unknown",]
data = data[data$Histology!="95403",]
data = data[data$Histology!="90403",]
data = data[data$Histology!="81233",]
CFch <- coxph(formula = Surv(Cancer_free_survival_Months, Cancer_free_survival_flag) ~ factor(RadSurgSeq) +factor(Race)+factor(Sex)+Age+Year_Diagnosis+factor(Surgery)+factor(RadiationType)+TumorSize+factor(Histology), data = data)
CFch
ggforest(CFch)
ggforest(CFch, data = data)
dataN <- data
ggforest(CFch, data = dataN)
require("survival")
model <- coxph( Surv(time, status) ~ sex + rx + adhere,
data = colon )
ggforest(model)
Lung <- data
CFch <- coxph(Surv(Cancer_free_survival_Months, Cancer_free_survival_flag) ~ factor(RadSurgSeq) +factor(Race)+factor(Sex)+Age+Year_Diagnosis+factor(Surgery)+factor(RadiationType)+TumorSize+factor(Histology), data = Lung)
ggforest(CFch)
Lung <- data
Lung$RadSurgSeq <- as.factor(Lung$RadSurgSeq)
Lung$Race <- as.factor(Lung$Race)
Lung$Sex <- as.factor(Lung$Sex)
Lung$Surgery <- as.factor(Lung$Surgery)
Lung$RadiationType <- as.factor(Lung$RadiationType)
Lung$Histology <- as.factor(Lung$Histology)
CFch <- coxph(Surv(Cancer_free_survival_Months, Cancer_free_survival_flag) ~ RadSurgSeq + Race+ Sex+Age+Year_Diagnosis+Surgery+RadiationType+TumorSize+Histology, data = Lung)
ggforest(CFch)
Dane <- data
Dane$RadSurgSeq <- as.factor(Dane$RadSurgSeq)
Dane$Race <- as.factor(Dane$Race)
Dane$Sex <- as.factor(Dane$Sex)
Dane$Surgery <- as.factor(Dane$Surgery)
Dane$RadiationType <- as.factor(Dane$RadiationType)
Dane$Histology <- as.factor(Dane$Histology)
CFch <- coxph(Surv(Cancer_free_survival_Months, Cancer_free_survival_flag) ~ RadSurgSeq + Race+ Sex+Age+Year_Diagnosis+Surgery+RadiationType+TumorSize+Histology, data = Dane)
ggforest(CFch)
CFch2 = coxph(formula = Surv(Cancer_free_survival_Months, Cancer_free_survival_flag) ~ strata(RadSurgSeq) +Race+Sex+Age+Year_Diagnosis+Surgery+RadiationType+TumorSize+Histology, data = Dane);
fitSurv <- survfit(CFch2)
ggsurvplot(fitSurv, data = Dane, pval = TRUE)
?survdiff
surfdiff(CFch2)
survdiff(CFch2)
doc(ggsurvplot)
doc(ggsurvplot)
help(ggsurvplot)
ggsurvplot(fitSurv, data = Dane)
ggsurvplot(fitSurv, data = Dane, pval = true)
ggsurvplot(fitSurv, data = Dane, pval = TRUE)
ggsurvplot(fitSurv, data = Dane, pval = 0.05)
survdiff(survfit(CFcsh2))
survdiff(survfit(CFch2))
summary(CFch2)
CFch2 = coxph(formula = Surv(Cancer_free_survival_Months, Cancer_free_survival_flag) ~ strata(RadSurgSeq) , data = Dane);
fitSurv <- survfit(CFch2)
ggsurvplot(fitSurv, data = Dane, pval = 0.05)
#plot survival curves
CFch2 = coxph(formula = Surv(Cancer_free_survival_Months, Cancer_free_survival_flag) ~ strata(RadSurgSeq) +Race+Sex+Age+Year_Diagnosis+Surgery+RadiationType+TumorSize+Histology, data = Dane);
fitSurv <- survfit(CFch2)
ggsurvplot(fitSurv, data = Dane, pval = 0.05)
?survfit
coxph(Surv(time, status) ~ x + strata(sex), test1)$score
CFch$score
CFch$loglik
CFch$wald.test
CHcf
CHch
CFch
summary(CFch2)
CFch$score
CFch$loglik
CFch$wald.test
w <- summary(CFch)
w
w$logtest
w$logtest[3]
ggsurvplot(fitSurv, data = Dane, pval = w$logtest[3])+theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
ggsurvplot(fitSurv, data = Dane, pval = w$logtest[3])+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
w <- summary(CFch2)
ggsurvplot(fitSurv, data = Dane, pval = w$logtest[3])+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
w <- summary(CFch2)
g <- ggsurvplot(fitSurv, data = Dane, pval = w$logtest[3])
g + theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
w <- summary(CFch2)
g <- ggsurvplot(fitSurv, data = Dane, pval = w$logtest[3])
g + theme(base_size = 22)
w <- summary(CFch2)
g <- ggsurvplot(fitSurv, data = Dane, pval = w$logtest[3])
g + theme_grey(base_size = 22)
ggsurvplot(fitSurv, data = Dane, pval = w$logtest[3])
install.packages("kableExtra")
?cox.zph
??cox.zph
library(survival)
?cox.zph
load("~/GitHub/NeoadjuvantRTpaper/SEER analysis/New data Aug 2018/Esophagus.RData")
View(data)
?plot.cox.zph
setwd("~/GitHub/NeoadjuvantRTpaper/SEER analysis/New data Aug 2018")
library(survival)
library(survminer)
library(rms)
library(knitr)
library(kableExtra)
rm(list=ls()); #clear variables
load("Lung.RData");
#rewriting variables values
#For interval censored data, the status indicator is 0=right censored, 1=event at time, 2=left censored, 3=interval censored
attach(data)
data$Vital_Status[Vital_Status == 1] <- 0; #alive (censored)
data$Vital_Status[Vital_Status == 4] <- 1; #dead
data$Cancer_free_survival_flag = 1-data$Cancer_free_survival_flag; #recoding cancer_survival flag
#limiting to 240 months
indx = data$Cancer_free_survival_Months > 240;
data$Cancer_free_survival_Months[indx] = 240;
data$Cancer_free_survival_flag[indx] = 0;
indx = data$Survival_Months > 240;
data$Survival_Months[indx] = 240;
data$Vital_Status[indx] = 0;
detach(data)
#removing other/unknwon values
data = data[data$Surgery!="4 - Unknown",]
data = data[data$RadiationType!="3 - Uknown",]
data = data[data$Histology!="3 - Unknown",]
data = data[data$Histology!="95403",]
data = data[data$Histology!="90403",]
data = data[data$Histology!="81233",]
Dane <- data
Dane$RadSurgSeq <- as.factor(Dane$RadSurgSeq)
Dane$Race <- as.factor(Dane$Race)
Dane$Sex <- as.factor(Dane$Sex)
Dane$Surgery <- as.factor(Dane$Surgery)
Dane$RadiationType <- as.factor(Dane$RadiationType)
Dane$Histology <- as.factor(Dane$Histology)
library('tableone')
table4 <- CreateTableOne(vars = c('Race','Sex','Age','Year_Diagnosis','Surgery','RadiationType','TumorSize','Histology'),
data = Dane, factorVars = c('Race','Sex','Surgery','RadiationType','Histology'), strata = 'RadSurgSeq')
nn <- c('Age','Year_Diagnosis','TumorSize')
table4 <- print(table4, printToggle = FALSE, noSpaces = TRUE, nonnormal = nn,showAllLevels = TRUE)
OSch = coxph(formula = Surv(Survival_Months, Vital_Status) ~ RadSurgSeq +Race+Sex+Age+Year_Diagnosis+Surgery+RadiationType+TumorSize+Histology, data = Dane);
OSch2 = coxph(formula = Surv(Survival_Months, Vital_Status) ~ strata(RadSurgSeq) +Race+Sex+Age+Year_Diagnosis+Surgery+RadiationType+TumorSize+Histology, data = Dane);
fitSurv <- survfit(OSch2)
ggsurvplot(fitSurv, legend.title = "", legend.labs = c("Adjuvant RT","Neoadjuvant RT"), data = Dane, conf.int = TRUE,break.time.by = 24) + ylab("Overall survival probability")+xlab("Time (months)")
OSch2
fitSurv
fitSurv$surv
fitSurv$strata
fitSurv$surv
fitSurv$surv
install.packages("SAScii")
rm(list = ls())
library(SAScii)
setwd("~/GitHub/CMOSTv2/SEER analysis")
read.SAScii()
help("read.SAScii")
rm(list = ls())
library(SAScii)
mainFolder <- 'SEER_1973_2014_CUSTOM_TEXTDATA'
subfolders <- c('yr1973_2014.seer9','yr1992_2014.sj_la_rg_ak','yr2000_2014.ca_ky_lo_nj_ga','yr2005.lo_2nd_half')
NsubFolders <- length(subfolders)
i <- 1
file <- paste(mainFolder,'incidence',subfolders[i],'COLRECT.TXT',sep = "/")
file
rm(list = ls())
library(SAScii)
mainFolder <- 'SEER_1973_2014_CUSTOM_TEXTDATA'
subfolders <- c('yr1973_2014.seer9','yr1992_2014.sj_la_rg_ak','yr2000_2014.ca_ky_lo_nj_ga','yr2005.lo_2nd_half')
dict <- 'SEER_1973_2014_CUSTOM_TEXTDATA\incidence\read.seer.research.custom.nov16.sas'
rm(list = ls())
library(SAScii)
mainFolder <- 'SEER_1973_2014_CUSTOM_TEXTDATA'
subfolders <- c('yr1973_2014.seer9','yr1992_2014.sj_la_rg_ak','yr2000_2014.ca_ky_lo_nj_ga','yr2005.lo_2nd_half')
dict <- 'SEER_1973_2014_CUSTOM_TEXTDATA\\incidence\\read.seer.research.custom.nov16.sas'
dict
file <- paste(mainFolder,'incidence',subfolders[i],'COLRECT.TXT',sep = '\\')
i <- 1
rm(list = ls())
library(SAScii)
mainFolder <- 'SEER_1973_2014_CUSTOM_TEXTDATA'
subfolders <- c('yr1973_2014.seer9','yr1992_2014.sj_la_rg_ak','yr2000_2014.ca_ky_lo_nj_ga','yr2005.lo_2nd_half')
dict <- 'SEER_1973_2014_CUSTOM_TEXTDATA\\incidence\\read.seer.research.custom.nov16.sas'
NsubFolders <- length(subfolders)
for (i in 1){#:NsubFolders
file <- paste(mainFolder,'incidence',subfolders[i],'COLRECT.TXT',sep = '\\')
dat <- read.SAScii(file, dict, beginline = 5)
}
rm(list = ls())
library(SAScii)
mainFolder <- 'SEER_1973_2014_CUSTOM_TEXTDATA'
subfolders <- c('yr1973_2014.seer9','yr1992_2014.sj_la_rg_ak','yr2000_2014.ca_ky_lo_nj_ga','yr2005.lo_2nd_half')
dict <- 'SEER_1973_2014_CUSTOM_TEXTDATA\\incidence\\read.seer.research.custom.nov16.sas'
NsubFolders <- length(subfolders)
for (i in 1){#:NsubFolders
file <- paste(mainFolder,'incidence',subfolders[i],'COLRECT.TXT',sep = '\\')
dat <- read.SAScii(file, dict, beginline = 6)
}
rm(list = ls())
library(SAScii)
mainFolder <- 'SEER_1973_2014_CUSTOM_TEXTDATA'
subfolders <- c('yr1973_2014.seer9','yr1992_2014.sj_la_rg_ak','yr2000_2014.ca_ky_lo_nj_ga','yr2005.lo_2nd_half')
dict <- 'SEER_1973_2014_CUSTOM_TEXTDATA\\incidence\\read.seer.research.custom.nov16.sas'
NsubFolders <- length(subfolders)
for (i in 1){#:NsubFolders
file <- paste(mainFolder,'incidence',subfolders[i],'COLRECT.TXT',sep = '\\')
dat <- read.SAScii(file, dict, beginline = 5)
}
rm(list = ls())
library(SAScii)
mainFolder <- 'SEER_1973_2014_CUSTOM_TEXTDATA'
subfolders <- c('yr1973_2014.seer9','yr1992_2014.sj_la_rg_ak','yr2000_2014.ca_ky_lo_nj_ga','yr2005.lo_2nd_half')
dict <- 'SEER_1973_2014_CUSTOM_TEXTDATA\\incidence\\read.seer.research.custom.nov16.sas'
NsubFolders <- length(subfolders)
for (i in 1){#:NsubFolders
file <- paste(mainFolder,'incidence',subfolders[i],'COLRECT.TXT',sep = '\\')
dat <- read.SAScii(file, dict, beginline = 6)
}
parse.SAScii( dict )
parse.SAScii()
